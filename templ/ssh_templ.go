// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templ

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/alpemreelmas/sysara/internal/models"
	"strconv"
)

type SSHListData struct {
	AuthData
	SSHKeys []models.SSHKey
	Error   string
}

type SSHCreateData struct {
	AuthData
	Name      string
	PublicKey string
	Error     string
}

func SSHList(data SSHListData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"space-y-6\"><!-- Header --><div class=\"sm:flex sm:items-center\"><div class=\"sm:flex-auto\"><h1 class=\"text-xl font-semibold text-gray-900\">SSH Keys</h1><p class=\"mt-2 text-sm text-gray-700\">Manage SSH public keys for server access.</p></div><div class=\"mt-4 sm:mt-0 sm:ml-16 sm:flex-none\"><a href=\"/ssh/create\" class=\"inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\"><i class=\"fas fa-plus mr-2\"></i> Add SSH Key</a></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if data.Error != "" {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\"><span class=\"block sm:inline\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(data.Error)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 40, Col: 47}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</span></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- SSH Keys List --><div class=\"bg-white shadow overflow-hidden sm:rounded-md\"><ul class=\"divide-y divide-gray-200\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(data.SSHKeys) > 0 {
				for _, key := range data.SSHKeys {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<li><div class=\"px-4 py-4\"><div class=\"flex items-center justify-between\"><div class=\"flex items-center\"><div class=\"flex-shrink-0 h-10 w-10\"><div class=\"h-10 w-10 rounded-lg bg-green-100 flex items-center justify-center\"><i class=\"fas fa-key text-green-600\"></i></div></div><div class=\"ml-4 flex-1\"><div class=\"flex items-center justify-between\"><p class=\"text-sm font-medium text-gray-900\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var4 string
					templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(key.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 60, Col: 68}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</p><div class=\"ml-2 flex-shrink-0 flex\"><p class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">Active</p></div></div><div class=\"mt-1\"><p class=\"text-sm text-gray-600\"><span class=\"font-medium\">Owner:</span> ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var5 string
					templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(key.User.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 69, Col: 69}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, " (")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var6 string
					templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(key.User.Email)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 69, Col: 89}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, ")</p><p class=\"text-sm text-gray-500 font-mono\"><span class=\"font-medium\">Fingerprint:</span> ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var7 string
					templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(key.Fingerprint)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 72, Col: 77}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</p><p class=\"text-xs text-gray-400\">Added ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var8 string
					templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(key.CreatedAt.Format("Jan 2, 2006"))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 75, Col: 57}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</p></div></div></div><div class=\"flex-shrink-0\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					if key.UserID == data.CurrentUser.ID {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<form method=\"POST\" action=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var9 templ.SafeURL
						templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinURLErrs("/ssh/" + strconv.Itoa(int(key.ID)) + "/delete")
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 82, Col: 88}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "\" class=\"inline\" onsubmit=\"return confirm('Are you sure you want to delete this SSH key?')\"><button type=\"submit\" class=\"inline-flex items-center px-3 py-1.5 border border-red-300 shadow-sm text-xs font-medium rounded text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"><i class=\"fas fa-trash mr-1\"></i> Delete</button></form>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</div></div><!-- Key Preview --><div class=\"mt-3\" x-data=\"{ showKey: false }\"><button @click=\"showKey = !showKey\" class=\"text-xs text-indigo-600 hover:text-indigo-500\"><span x-show=\"!showKey\">Show public key</span> <span x-show=\"showKey\">Hide public key</span></button><div x-show=\"showKey\" x-transition class=\"mt-2 p-3 bg-gray-50 rounded-lg\"><pre class=\"text-xs text-gray-700 whitespace-pre-wrap break-all\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var10 string
					templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(key.PublicKey)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 99, Col: 91}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</pre></div></div></div></li>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<li class=\"px-4 py-8 text-center\"><div class=\"text-sm text-gray-500\"><i class=\"fas fa-key text-4xl text-gray-400 mb-4\"></i><p class=\"text-lg font-medium text-gray-900 mb-2\">No SSH keys found</p><p>Add your first SSH public key to get started with server access.</p><div class=\"mt-6\"><a href=\"/ssh/create\" class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"><i class=\"fas fa-plus mr-2\"></i> Add SSH Key</a></div></div></li>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "</ul></div><!-- Help Section --><div class=\"bg-blue-50 border border-blue-200 rounded-lg p-4\"><div class=\"flex\"><div class=\"flex-shrink-0\"><i class=\"fas fa-info-circle text-blue-400\"></i></div><div class=\"ml-3\"><h3 class=\"text-sm font-medium text-blue-800\">SSH Key Guidelines</h3><div class=\"mt-2 text-sm text-blue-700\"><p class=\"mb-2\">To generate a new SSH key pair:</p><pre class=\"bg-blue-100 p-2 rounded text-xs\">ssh-keygen -t ed25519 -C \"your_email@example.com\"</pre><p class=\"mt-2\">Then copy the public key (usually in ~/.ssh/id_ed25519.pub) and paste it here.</p></div></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Auth(data.AuthData).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func SSHCreate(data SSHCreateData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var11 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var11 == nil {
			templ_7745c5c3_Var11 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var12 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<div class=\"space-y-6\"><!-- Header --><div><nav class=\"flex\" aria-label=\"Breadcrumb\"><ol class=\"flex items-center space-x-4\"><li><a href=\"/ssh\" class=\"text-gray-400 hover:text-gray-500\"><i class=\"fas fa-key\"></i> <span class=\"sr-only\">SSH Keys</span></a></li><li><div class=\"flex items-center\"><i class=\"fas fa-chevron-right text-gray-400 mr-4\"></i> <span class=\"text-sm font-medium text-gray-900\">Add SSH Key</span></div></li></ol></nav><div class=\"mt-4\"><h1 class=\"text-xl font-semibold text-gray-900\">Add SSH Key</h1><p class=\"mt-1 text-sm text-gray-600\">Add a new SSH public key for server access.</p></div></div><!-- Form --><div class=\"bg-white shadow sm:rounded-lg\"><div class=\"px-4 py-5 sm:p-6\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if data.Error != "" {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "<div class=\"mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\"><span class=\"block sm:inline\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var13 string
				templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(data.Error)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 175, Col: 49}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "</span></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "<form method=\"POST\" action=\"/ssh/create\" class=\"space-y-6\"><div><label for=\"name\" class=\"block text-sm font-medium text-gray-700\">Key Name</label><div class=\"mt-1\"><input type=\"text\" name=\"name\" id=\"name\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 string
			templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(data.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 185, Col: 66}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "\" required placeholder=\"e.g., Personal Laptop, Work Computer\" class=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"></div><p class=\"mt-1 text-sm text-gray-500\">Give your SSH key a descriptive name to identify it later.</p></div><div><label for=\"public_key\" class=\"block text-sm font-medium text-gray-700\">SSH Public Key</label><div class=\"mt-1\"><textarea name=\"public_key\" id=\"public_key\" rows=\"6\" required placeholder=\"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGz7QQz... user@example.com\" class=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md font-mono\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var15 string
			templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(data.PublicKey)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/ssh.templ`, Line: 195, Col: 289}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "</textarea></div><p class=\"mt-1 text-sm text-gray-500\">Paste your SSH public key here. It should start with ssh-rsa, ssh-ed25519, or similar.</p></div><div class=\"flex justify-end space-x-3\"><a href=\"/ssh\" class=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">Cancel</a> <button type=\"submit\" class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"><i class=\"fas fa-plus mr-2\"></i> Add SSH Key</button></div></form></div></div><!-- Instructions --><div class=\"bg-gray-50 rounded-lg p-6\"><h3 class=\"text-lg font-medium text-gray-900 mb-4\">How to Generate SSH Keys</h3><div class=\"space-y-4\"><div><h4 class=\"text-sm font-medium text-gray-700\">1. Generate a new SSH key pair</h4><pre class=\"mt-1 bg-gray-100 p-3 rounded text-sm\">ssh-keygen -t ed25519 -C \"your_email@example.com\"</pre><p class=\"mt-1 text-sm text-gray-600\">Follow the prompts and optionally set a passphrase for added security.</p></div><div><h4 class=\"text-sm font-medium text-gray-700\">2. Copy your public key</h4><p class=\"mt-1 text-sm text-gray-600\">Copy the contents of your public key file:</p><div class=\"mt-2 space-y-2\"><div><span class=\"text-xs font-medium text-gray-500\">Linux/Mac:</span><pre class=\"mt-1 bg-gray-100 p-2 rounded text-xs\">cat ~/.ssh/id_ed25519.pub</pre></div><div><span class=\"text-xs font-medium text-gray-500\">Windows (Git Bash):</span><pre class=\"mt-1 bg-gray-100 p-2 rounded text-xs\">cat ~/.ssh/id_ed25519.pub</pre></div><div><span class=\"text-xs font-medium text-gray-500\">Windows (PowerShell):</span><pre class=\"mt-1 bg-gray-100 p-2 rounded text-xs\">Get-Content $env:USERPROFILE\\.ssh\\id_ed25519.pub</pre></div></div></div><div><h4 class=\"text-sm font-medium text-gray-700\">3. Paste the public key above</h4><p class=\"mt-1 text-sm text-gray-600\">Copy the entire output and paste it into the SSH Public Key field above.</p></div></div></div></div><script>\n\t\t\t// Validate SSH key format\n\t\t\tdocument.getElementById('public_key').addEventListener('input', function() {\n\t\t\t\tconst key = this.value.trim();\n\t\t\t\tconst validTypes = ['ssh-rsa', 'ssh-dss', 'ssh-ed25519', 'ecdsa-sha2-nistp256', 'ecdsa-sha2-nistp384', 'ecdsa-sha2-nistp521'];\n\t\t\t\tconst isValid = validTypes.some(type => key.startsWith(type));\n\t\t\t\t\n\t\t\t\tif (key && !isValid) {\n\t\t\t\t\tthis.setCustomValidity('Please enter a valid SSH public key');\n\t\t\t\t} else {\n\t\t\t\t\tthis.setCustomValidity('');\n\t\t\t\t}\n\t\t\t});\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Auth(data.AuthData).Render(templ.WithChildren(ctx, templ_7745c5c3_Var12), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
